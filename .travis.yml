#
# CI Hello World
#
# Copyright (C) 2017 Assured Information Security, Inc.
# Author: Rian Quinn        <quinnr@ainfosec.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

#
# Configuration
#
#sudo: required
language: cpp

dist: trusty

sudo: false

branches:
  only:
    - master
    - devel

#
# Build Dependencies
#
before_script:
  #
  # Build Folder
  #
  - mkdir build
  - cd build

  # Update / Install Eigen
  - wget https://gitlab.com/libeigen/eigen/-/archive/3.3-beta1/eigen-3.3-beta1.tar.gz && tar xzf eigen-3.3-beta1.tar.gz && sudo cp -Rp eigen-3.3-beta1 /usr/local/include/eigen3;

#
# Build Matrix
#
matrix:
  include:
  #
  # Doxygen
  #
  - os: linux
    env:
      - TEST="Doxygen"
    addons:
      apt:
        packages:
          - doxygen
    script:
      - cd ..
      - doxygen .doxygen.txt
      - |
        if [[ -s doxygen_warnings.txt ]]; then
          echo "You must fix doxygen before submitting a pull request"
          echo ""
          cat doxygen_warnings.txt
          exit -1
        fi

  #
  # CppCheck
  #
  - os: linux
    env:
      - TEST="CppCheck"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
          - cppcheck # install newer version?
    script:
      - cmake -DENABLE_CPPCHECK=ON -DCMAKE_CXX_COMPILER="g++-6" -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON ..
      - make
      - make run-cppcheck

  #
  # Codecov
  #
  - os: linux
    env:
      - TEST="Codecov"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
    script:
      - cmake -DENABLE_COVERAGE=ON -DCMAKE_CXX_COMPILER="g++-6" -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON ..
      - travis_wait make
      - make test
      - cd ..
      - bash <(curl -s https://codecov.io/bash)

  #
  # Valgrind
  #
  - os: linux
    env:
      - TEST="Valgrind"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
          - valgrind
    script:
      - cmake -DCMAKE_CXX_COMPILER="g++-6" -DENABLE_VALGRIND=ON -DBUILD_TESTING=ON ..
      - make
      - ctest -T memcheck

  #
  # G++ 5
  #
  - os: linux
    env:
      - TEST="G++ 5"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-5
          - g++-5
    script:
      - cmake -DCMAKE_CXX_COMPILER="g++-5" -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON ..
      - make
      - make test

  #
  # G++ 6
  #
  - os: linux
    env:
      - TEST="G++ 6"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
    script:
      - cmake -DCMAKE_CXX_COMPILER="g++-6" -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON ..
      - make
      - make test

  #
  # G++ 7
  #
  - os: linux
    env:
      - TEST="G++ 7"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-7
          - g++-7
    script:
      - cmake -DCMAKE_CXX_COMPILER="g++-7" -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON ..
      - make
      - make test

  #
  # G++ 8
  #
  - os: linux
    env:
      - TEST="G++ 8"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-8
          - g++-8
    script:
      - cmake -DCMAKE_CXX_COMPILER="g++-8" -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON ..
      - make
      - make test

  #
  # G++ 9
  #
  - os: linux
    env:
      - TEST="G++ 9"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-9
          - g++-9
    script:
      - cmake -DCMAKE_CXX_COMPILER="g++-9" -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON ..
      - make
      - make test

  #
  # Clang 3.8
  #
  - os: linux
    env:
      - TEST="Clang 3.8"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-3.8
        packages:
          - clang-3.8
          - gcc-6
          - g++-6
    script:
      - cmake -DCMAKE_C_COMPILER=clang-3.8 -DCMAKE_CXX_COMPILER=clang++-3.8 -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON ..
      - make
      - make test

  #
  # Clang 3.9
  #
  - os: linux
    env:
      - TEST="Clang 3.9"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-3.9
        packages:
          - clang-3.9
          - gcc-6
          - g++-6
    script:
      - cmake -DCMAKE_C_COMPILER=clang-3.9 -DCMAKE_CXX_COMPILER=clang++-3.9 -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON ..
      - make
      - make test

  #
  # Clang 4.0
  #
  - os: linux
    env:
      - TEST="Clang 4.0"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-4.0
        packages:
          - clang-4.0
          - gcc-6
          - g++-6
    script:
      - cmake -DCMAKE_C_COMPILER=clang-4.0 -DCMAKE_CXX_COMPILER=clang++-4.0 -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON ..
      - make
      - make test

  #
  # Clang 5.0
  #
  - os: linux
    env:
      - TEST="Clang 5.0"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-5.0
        packages:
          - clang-5.0
          - gcc-6
          - g++-6
    script:
      - cmake -DCMAKE_C_COMPILER=clang-5.0 -DCMAKE_CXX_COMPILER=clang++-5.0 -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON ..
      - make
      - make test

  #
  # XCode 8.3
  #
  - os: osx
    env:
      - TEST="XCode 8.3"
    osx_image: xcode8.3
    script:
      - cmake -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON ..
      - make
      - make test

  #
  # ARM64
  #
  - os: linux
    env:
      - TEST="ARM64"
    arch: arm64
    compiler: gcc
    script:
      - cmake -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON ..
      - travis_wait make
      - travis_wait make test

  #
  # Ceres-related tests
  #
  - os: linux
    env:
      - TEST="Ceres"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-5
          - g++-5
    script:
      - git clone --branch=1.14.0 --single-branch git://github.com/ceres-solver/ceres-solver.git /tmp/ceres-solver &&
        mkdir /tmp/ceres-solver-build && cd /tmp/ceres-solver-build &&
        cmake /tmp/ceres-solver -DMINIGLOG=ON -DBUILD_TESTING=OFF -DBUILD_EXAMPLES=OFF &&
        make -j2 && sudo make install && cd -;
      - cmake -DCMAKE_CXX_COMPILER="g++-5" -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON ..
      - make -j2
      - make test

  allow_failures:
    - os: linux
      env:
        - TEST="Doxygen"
