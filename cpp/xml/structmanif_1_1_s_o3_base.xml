<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structmanif_1_1_s_o3_base" kind="struct" language="C++" prot="public">
    <compoundname>manif::SO3Base</compoundname>
    <basecompoundref refid="structmanif_1_1_lie_group_base" prot="public" virt="non-virtual">manif::LieGroupBase&lt; _Derived &gt;</basecompoundref>
    <includes refid="_s_o3__base_8h" local="no">SO3_base.h</includes>
    <templateparamlist>
      <param>
        <type>typename _Derived</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structmanif_1_1_s_o3_base_1aded7e00933238abee22a08877dbccdc0" prot="private" static="no">
        <type><ref refid="structmanif_1_1_lie_group_base" kindref="compound">LieGroupBase</ref>&lt; _Derived &gt;</type>
        <definition>using manif::SO3Base&lt; _Derived &gt;::Base =  LieGroupBase&lt;_Derived&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="23" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_s_o3_base_1a9d18ad4e9baa8c32f82e6c641590bd10" prot="private" static="no">
        <type><ref refid="structmanif_1_1_s_o3_base" kindref="compound">SO3Base</ref>&lt; _Derived &gt;</type>
        <definition>using manif::SO3Base&lt; _Derived &gt;::Type =  SO3Base&lt;_Derived&gt;</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="24" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structmanif_1_1_s_o3_base_1ad2ba319fe25cd9a2b89a882148d0f8f3" prot="public" static="no">
        <type>typename <ref refid="structmanif_1_1internal_1_1traits" kindref="compound">internal::traits</ref>&lt; _Derived &gt;::Rotation</type>
        <definition>using manif::SO3Base&lt; _Derived &gt;::Rotation =  typename internal::traits&lt;_Derived&gt;::Rotation</definition>
        <argsstring></argsstring>
        <name>Rotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="34" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_s_o3_base_1a47484753372a5a6b30b1042cbf8e0af3" prot="public" static="no">
        <type>typename <ref refid="structmanif_1_1internal_1_1traits" kindref="compound">internal::traits</ref>&lt; _Derived &gt;::Transformation</type>
        <definition>using manif::SO3Base&lt; _Derived &gt;::Transformation =  typename internal::traits&lt;_Derived&gt;::Transformation</definition>
        <argsstring></argsstring>
        <name>Transformation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="35" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_s_o3_base_1a12ea0cd5364e582c48c345d734c31134" prot="public" static="no">
        <type>Eigen::Quaternion&lt; Scalar &gt;</type>
        <definition>using manif::SO3Base&lt; _Derived &gt;::QuaternionDataType =  Eigen::Quaternion&lt;Scalar&gt;</definition>
        <argsstring></argsstring>
        <name>QuaternionDataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="36" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1acd40009f15b735a7c29e39dfae049d8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>LieGroup</type>
        <definition>SO3Base&lt; _Derived &gt;::LieGroup manif::SO3Base&lt; _Derived &gt;::inverse</definition>
        <argsstring>(OptJacobianRef J_minv_m={}) const</argsstring>
        <name>inverse</name>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_minv_m</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Get the inverse of this. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">-optional-</parametername>
</parameternamelist>
<parameterdescription>
<para>J_minv_m Jacobian of the inverse wrt this. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>q^-1 = q*. See Eq. (140). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="55" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="170" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1a92a5813094ee16b3cb488fed95cc9163" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Tangent</type>
        <definition>SO3Base&lt; _Derived &gt;::Tangent manif::SO3Base&lt; _Derived &gt;::log</definition>
        <argsstring>(OptJacobianRef J_t_m={}) const</argsstring>
        <name>log</name>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_t_m</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Get the <ref refid="structmanif_1_1_s_o3" kindref="compound">SO3</ref> corresponding Lie algebra element in vector form. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">-optional-</parametername>
</parameternamelist>
<parameterdescription>
<para>J_t_m Jacobian of the tangent wrt to this. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="structmanif_1_1_s_o3" kindref="compound">SO3</ref> tangent of this. </para>
</simplesect>
<simplesect kind="note"><para>This is the <ref refid="structmanif_1_1_s_o3_base_1a92a5813094ee16b3cb488fed95cc9163" kindref="member">log()</ref> map in vector form. </para>
</simplesect>
<simplesect kind="note"><para>See Eq. (133) &amp; Eq. (144). </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structmanif_1_1_s_o3_tangent" kindref="compound">SO3Tangent</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="65" column="11" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="185" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1a97b47401eb8b038d82a1feacd56839a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>MANIF_DEPRECATED Tangent</type>
        <definition>SO3Base&lt; _Derived &gt;::Tangent manif::SO3Base&lt; _Derived &gt;::lift</definition>
        <argsstring>(OptJacobianRef J_t_m={}) const</argsstring>
        <name>lift</name>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_t_m</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>This function is deprecated. Please considere using <ref refid="structmanif_1_1_s_o3_base_1a92a5813094ee16b3cb488fed95cc9163" kindref="member">log</ref> instead. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="73" column="11" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1a7589865c0f9d6f442daf1703d7eb244f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _DerivedOther</type>
          </param>
        </templateparamlist>
        <type>LieGroup</type>
        <definition>SO3Base&lt; _Derived &gt;::LieGroup manif::SO3Base&lt; _Derived &gt;::compose</definition>
        <argsstring>(const LieGroupBase&lt; _DerivedOther &gt; &amp;m, OptJacobianRef J_mc_ma={}, OptJacobianRef J_mc_mb={}) const</argsstring>
        <name>compose</name>
        <param>
          <type>const <ref refid="structmanif_1_1_lie_group_base" kindref="compound">LieGroupBase</ref>&lt; _DerivedOther &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_mc_ma</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_mc_mb</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Composition of this and another <ref refid="structmanif_1_1_s_o3" kindref="compound">SO3</ref> element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">m</parametername>
</parameternamelist>
<parameterdescription>
<para>Another <ref refid="structmanif_1_1_s_o3" kindref="compound">SO3</ref> element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">-optional-</parametername>
</parameternamelist>
<parameterdescription>
<para>J_mc_ma Jacobian of the composition wrt this. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">-optional-</parametername>
</parameternamelist>
<parameterdescription>
<para>J_mc_mb Jacobian of the composition wrt m. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The composition of &apos;this . m&apos;. </para>
</simplesect>
<simplesect kind="note"><para>Quaternion product. </para>
</simplesect>
<simplesect kind="note"><para>See Eqs. (141,142). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="85" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="264" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1a68aaac3a6fc58f85309112324f4113e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _EigenDerived</type>
          </param>
        </templateparamlist>
        <type>Eigen::Matrix&lt; Scalar, 3, 1 &gt;</type>
        <definition>Eigen::Matrix&lt;Scalar, 3, 1&gt; manif::SO3Base&lt; _Derived &gt;::act</definition>
        <argsstring>(const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;v, tl::optional&lt; Eigen::Ref&lt; Eigen::Matrix&lt; Scalar, 3, 3 &gt;&gt;&gt; J_vout_m={}, tl::optional&lt; Eigen::Ref&lt; Eigen::Matrix&lt; Scalar, 3, 3 &gt;&gt;&gt; J_vout_v={}) const</argsstring>
        <name>act</name>
        <param>
          <type>const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>tl::optional&lt; Eigen::Ref&lt; Eigen::Matrix&lt; Scalar, 3, 3 &gt;&gt;&gt;</type>
          <declname>J_vout_m</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>tl::optional&lt; Eigen::Ref&lt; Eigen::Matrix&lt; Scalar, 3, 3 &gt;&gt;&gt;</type>
          <declname>J_vout_v</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Rotation action on a 3-vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>A 2-vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">-optional-</parametername>
</parameternamelist>
<parameterdescription>
<para>J_vout_m The Jacobian of the new object wrt this. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">-optional-</parametername>
</parameternamelist>
<parameterdescription>
<para>J_vout_v The Jacobian of the new object wrt input object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The rotated 3-vector. </para>
</simplesect>
<simplesect kind="note"><para>See Eq (136), Eqs. (150,151) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="99" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1ac2bc6eb4bb1164ad12224ec83090c6dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Jacobian</type>
        <definition>SO3Base&lt; _Derived &gt;::Jacobian manif::SO3Base&lt; _Derived &gt;::adj</definition>
        <argsstring>() const</argsstring>
        <name>adj</name>
        <briefdescription>
<para>Get the adjoint of <ref refid="structmanif_1_1_s_o3" kindref="compound">SO3</ref> at this. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>See Eq. (139). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="107" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1ab2d6a8931b39c5230ef55748a9ab6f57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Transformation</type>
        <definition>SO3Base&lt; _Derived &gt;::Transformation manif::SO3Base&lt; _Derived &gt;::transform</definition>
        <argsstring>() const</argsstring>
        <name>transform</name>
        <briefdescription>
<para>Get the transformation matrix (3D isometry). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>T = | R 0 | | 0 1 | </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="116" column="18" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="154" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1ac7a13b927b59ab0b91aeff7ea7a2af95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Rotation</type>
        <definition>SO3Base&lt; _Derived &gt;::Rotation manif::SO3Base&lt; _Derived &gt;::rotation</definition>
        <argsstring>() const</argsstring>
        <name>rotation</name>
        <briefdescription>
<para>Get a rotation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="119" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1a793886210e24253866695e9bb2d9ba98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Scalar</type>
        <definition>SO3Base&lt; _Derived &gt;::Scalar manif::SO3Base&lt; _Derived &gt;::x</definition>
        <argsstring>() const</argsstring>
        <name>x</name>
        <briefdescription>
<para>Get the x component of the quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="122" column="10" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="331" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1a442db8ac2a6533cf44a334791be64254" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Scalar</type>
        <definition>SO3Base&lt; _Derived &gt;::Scalar manif::SO3Base&lt; _Derived &gt;::y</definition>
        <argsstring>() const</argsstring>
        <name>y</name>
        <briefdescription>
<para>Get the y component of the quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="124" column="10" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="338" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1a5c90cc014507e6fe2a26f5fd1c57a79d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Scalar</type>
        <definition>SO3Base&lt; _Derived &gt;::Scalar manif::SO3Base&lt; _Derived &gt;::z</definition>
        <argsstring>() const</argsstring>
        <name>z</name>
        <briefdescription>
<para>Get the z component of the quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="126" column="10" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="345" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1ac984cb6f6397fb6e63a544277c98efc3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Scalar</type>
        <definition>SO3Base&lt; _Derived &gt;::Scalar manif::SO3Base&lt; _Derived &gt;::w</definition>
        <argsstring>() const</argsstring>
        <name>w</name>
        <briefdescription>
<para>Get the w component of the quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="128" column="10" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="352" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1a407db974019560ebec9ecc09bd78682a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QuaternionDataType</type>
        <definition>SO3Base&lt; _Derived &gt;::QuaternionDataType manif::SO3Base&lt; _Derived &gt;::quat</definition>
        <argsstring>() const</argsstring>
        <name>quat</name>
        <briefdescription>
<para>Get quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="131" column="22" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="359" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1a2c3ac0fa1ba5c75bb14c085cabb61cb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void manif::SO3Base&lt; _Derived &gt;::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
<para>Normalize the underlying quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="136" column="8" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="365" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1a5e0fc0a4fdb6f727169955939d59f9b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void manif::SO3Base&lt; _Derived &gt;::quat</definition>
        <argsstring>(const QuaternionDataType &amp;quaternion)</argsstring>
        <name>quat</name>
        <param>
          <type>const QuaternionDataType &amp;</type>
          <declname>quaternion</declname>
        </param>
        <briefdescription>
<para>Set the rotational as a quaternion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>quaternion</parametername>
</parameternamelist>
<parameterdescription>
<para>a unitary quaternion </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="142" column="8" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="371" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1a7ad3e8e0ae0d7c9643e4e4cac1bbe986" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _EigenDerived</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void manif::SO3Base&lt; _Derived &gt;::quat</definition>
        <argsstring>(const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;quaternion)</argsstring>
        <name>quat</name>
        <param>
          <type>const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;</type>
          <declname>quaternion</declname>
        </param>
        <briefdescription>
<para>Set the rotational as a quaternion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>quaternion</parametername>
</parameternamelist>
<parameterdescription>
<para>an Eigen::Vector representing a unitary quaternion </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="149" column="8" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="378" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1ada7cc6fe709724ddfab376f1f12ae19a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _EigenDerived</type>
          </param>
        </templateparamlist>
        <type>Eigen::Matrix&lt; typename <ref refid="structmanif_1_1_s_o3_base" kindref="compound">SO3Base</ref>&lt; _Derived &gt;::Scalar, 3, 1 &gt;</type>
        <definition>Eigen::Matrix&lt;typename SO3Base&lt;_Derived&gt;::Scalar, 3, 1&gt; manif::SO3Base&lt; _Derived &gt;::act</definition>
        <argsstring>(const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;v, tl::optional&lt; Eigen::Ref&lt; Eigen::Matrix&lt; Scalar, 3, 3 &gt;&gt;&gt; J_vout_m, tl::optional&lt; Eigen::Ref&lt; Eigen::Matrix&lt; Scalar, 3, 3 &gt;&gt;&gt; J_vout_v) const</argsstring>
        <name>act</name>
        <param>
          <type>const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>tl::optional&lt; Eigen::Ref&lt; Eigen::Matrix&lt; Scalar, 3, 3 &gt;&gt;&gt;</type>
          <declname>J_vout_m</declname>
        </param>
        <param>
          <type>tl::optional&lt; Eigen::Ref&lt; Eigen::Matrix&lt; Scalar, 3, 3 &gt;&gt;&gt;</type>
          <declname>J_vout_v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="300" column="9" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="300" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1a1ac9dd89b140080b8b0284c8bdfb5270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DataType &amp;</type>
        <definition>LieGroupBase&lt; _Derived &gt;::DataType &amp; manif::LieGroupBase&lt; _Derived &gt;::coeffs</definition>
        <argsstring>()</argsstring>
        <name>coeffs</name>
        <briefdescription>
<para>Access the underlying data by const reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="32" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/lie_group_base.h" bodystart="388" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1acee62f2ce8024b20db04c304031af85e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const DataType &amp;</type>
        <definition>const LieGroupBase&lt; _Derived &gt;::DataType &amp; manif::LieGroupBase&lt; _Derived &gt;::coeffs</definition>
        <argsstring>() const</argsstring>
        <name>coeffs</name>
        <briefdescription>
<para>Access the underlying data by const reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="32" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/lie_group_base.h" bodystart="395" bodyend="398"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1a7ce9db9ccb753dbe014d050fad09c385" prot="protected" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>_Derived &amp;</type>
        <definition>_Derived&amp; manif::LieGroupBase&lt; _Derived &gt;::derived</definition>
        <argsstring>() &amp;noexcept</argsstring>
        <name>derived</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="40" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/lie_group_base.h" bodystart="340" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_s_o3_base_1a9380b9ee1ed9bbdcf3dcf284571f6901" prot="protected" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const _Derived &amp;</type>
        <definition>const _Derived&amp; manif::LieGroupBase&lt; _Derived &gt;::derived</definition>
        <argsstring>() const &amp;noexcept</argsstring>
        <name>derived</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="40" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/lie_group_base.h" bodystart="341" bodyend="341"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The base class of the <ref refid="structmanif_1_1_s_o3" kindref="compound">SO3</ref> group. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>See Appendix B of the paper. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>manif::SO3Base&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_s_o3_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>manif::LieGroupBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_lie_group_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>manif::SO3Base&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_s_o3_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>manif::LieGroupBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_lie_group_base"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" line="19" column="1" bodyfile="/home/runner/work/manif/manif/include/manif/impl/so3/SO3_base.h" bodystart="20" bodyend="150"/>
    <listofallmembers>
      <member refid="structmanif_1_1_lie_group_base_1a7fe44175f7ad70476c640d4745d7c6c9" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>_</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a68aaac3a6fc58f85309112324f4113e9" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>act</name></member>
      <member refid="structmanif_1_1_s_o3_base_1ada7cc6fe709724ddfab376f1f12ae19a" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>act</name></member>
      <member refid="structmanif_1_1_lie_group_base_1adc60eaf39fd497125f94e7b437f5d86f" prot="public" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>manif::SO3Base</scope><name>act</name></member>
      <member refid="structmanif_1_1_s_o3_base_1ac2bc6eb4bb1164ad12224ec83090c6dd" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>adj</name></member>
      <member refid="structmanif_1_1_s_o3_base_1aded7e00933238abee22a08877dbccdc0" prot="private" virt="non-virtual"><scope>manif::SO3Base</scope><name>Base</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7351c9a0e8fe51c72978626efa12d97c" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>between</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad0db8fc1317d2ea0f6f210a6b274ec88" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>cast</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a0ef0052589be75ef70ca7770cf73def7" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>cast</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a1ac9dd89b140080b8b0284c8bdfb5270" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>coeffs</name></member>
      <member refid="structmanif_1_1_s_o3_base_1acee62f2ce8024b20db04c304031af85e" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>coeffs</name></member>
      <member refid="structmanif_1_1_lie_group_base_1acee62f2ce8024b20db04c304031af85e" prot="public" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>manif::SO3Base</scope><name>coeffs</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a7589865c0f9d6f442daf1703d7eb244f" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>compose</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7d766d75afce68d88e7b83108b1bde3d" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>data</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a58250b5749c58fe57a7ecd14c4009dd0" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>data</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a59562d75de51334eab68426521a4e923" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>DataType</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a7ce9db9ccb753dbe014d050fad09c385" prot="protected" virt="non-virtual"><scope>manif::SO3Base</scope><name>derived</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a9380b9ee1ed9bbdcf3dcf284571f6901" prot="protected" virt="non-virtual"><scope>manif::SO3Base</scope><name>derived</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7ce9db9ccb753dbe014d050fad09c385" prot="protected" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>manif::SO3Base</scope><name>derived</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a9380b9ee1ed9bbdcf3dcf284571f6901" prot="protected" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>manif::SO3Base</scope><name>derived</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a42a00de7f4c6ae7e8a11568dfd4a43a8" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>Dim</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a613898f9799c5317567b33a1fabe726e" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>DoF</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a34a63b85f977cb40012be342f902404a" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>Identity</name></member>
      <member refid="structmanif_1_1_s_o3_base_1acd40009f15b735a7c29e39dfae049d8f" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>inverse</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ac4d00c4834b1415eef9fb7a14dc8f708" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>isApprox</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ac02491bfe309ff4a384ca4394f153d6c" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>Jacobian</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a1f015474f257f800bcd826787b26bcfc" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>LieGroup</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a536b5307a15fd40b0e5eb87c0344d6a8" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>LieGroupTemplate</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a97b47401eb8b038d82a1feacd56839a2" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>lift</name></member>
      <member refid="structmanif_1_1_lie_group_base_1aef8d336d81a657e541e5ff48e5a08b1c" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>lminus</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a92a5813094ee16b3cb488fed95cc9163" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>log</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad6af777d6c8914c59ce88a76db6f4775" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>lplus</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a3912f9ef389576c9038ce2d544b4b833" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>minus</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a2c3ac0fa1ba5c75bb14c085cabb61cb3" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>normalize</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a4e49d3cf3538e03ff7d19c1602da19cc" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>operator*</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a019031c758bfb21a7030cd97843d4b4d" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>operator*=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a1a497184154ab95cc4cc4d14eb07c513" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>operator+</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a2a3e11651c59644d8f5f3705d0b257de" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>operator+=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1af59dd9dc829de8f8f49ecf4bee27fedd" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>operator-</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ac411dc1b8a4456a3bae4afd152abddaa" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ab3b5b3153e4d50982f9f71d104c8c37f" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a2b270c001e289786a499d76d886a5869" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a5d68ac830a6191abb32eccc874612bef" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>operator==</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7eb3084333fc8887e2fca17484eb8b81" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>operator[]</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad6e624bd8270cec712a65f215d361b92" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>operator[]</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a9e323b97f09981a2b0d1973f8d81b21b" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>OptJacobianRef</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a74d5760f793fbfdeec248b34b3360d1c" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>plus</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a407db974019560ebec9ecc09bd78682a" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>quat</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a5e0fc0a4fdb6f727169955939d59f9b7" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>quat</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a7ad3e8e0ae0d7c9643e4e4cac1bbe986" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>quat</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a12ea0cd5364e582c48c345d734c31134" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>QuaternionDataType</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a0c1def597571453671f7762c4e511e05" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>Random</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a229272dd86ff795a11848855b7072b20" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>RepSize</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad6c5f9dc430ca6b0ff1eb5cc58c9faed" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>rminus</name></member>
      <member refid="structmanif_1_1_s_o3_base_1ad2ba319fe25cd9a2b89a882148d0f8f3" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>Rotation</name></member>
      <member refid="structmanif_1_1_s_o3_base_1ac7a13b927b59ab0b91aeff7ea7a2af95" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>rotation</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a2a36d6106e38cd7fac46510e6458a119" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>rplus</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7215753f62eaeced0a3c8f53147938e3" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>Scalar</name></member>
      <member refid="structmanif_1_1_lie_group_base_1aa154961cb80b013d3d1d66132e487f33" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>setIdentity</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a3d9dc0ea239fa48ca9d75d11e08e020d" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>setRandom</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a87b9295ceffbca507f4a056a20260fc1" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>size</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ab920e7e67b4e174ad7e291cd10945827" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>Tangent</name></member>
      <member refid="structmanif_1_1_s_o3_base_1ab2d6a8931b39c5230ef55748a9ab6f57" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>transform</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a47484753372a5a6b30b1042cbf8e0af3" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>Transformation</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a9d18ad4e9baa8c32f82e6c641590bd10" prot="private" virt="non-virtual"><scope>manif::SO3Base</scope><name>Type</name></member>
      <member refid="structmanif_1_1_lie_group_base_1aefcb523771afb5c59a70fb2d869598eb" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>Vector</name></member>
      <member refid="structmanif_1_1_s_o3_base_1ac984cb6f6397fb6e63a544277c98efc3" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>w</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a793886210e24253866695e9bb2d9ba98" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>x</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a442db8ac2a6533cf44a334791be64254" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>y</name></member>
      <member refid="structmanif_1_1_s_o3_base_1a5c90cc014507e6fe2a26f5fd1c57a79d" prot="public" virt="non-virtual"><scope>manif::SO3Base</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
