<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_eigen_1_1_map_3_01const_01manif_1_1_s_gal3_3_01___scalar_01_4_00_010_01_4" kind="class" language="C++" prot="public">
    <compoundname>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</compoundname>
    <basecompoundref refid="structmanif_1_1_s_gal3_base" prot="public" virt="non-virtual">manif::SGal3Base&lt; Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt; &gt;</basecompoundref>
    <includes refid="_s_gal3__map_8h" local="no">SGal3_map.h</includes>
    <templateparamlist>
      <param>
        <type>class _Scalar</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_eigen_1_1_map_3_01const_01manif_1_1_s_gal3_3_01___scalar_01_4_00_010_01_4_1a2c1aea33ca6e30e1fa6eedacc91f004b" prot="private" static="no">
        <type><ref refid="structmanif_1_1_s_gal3_base" kindref="compound">manif::SGal3Base</ref>&lt; Map&lt; const <ref refid="structmanif_1_1_s_gal3" kindref="compound">manif::SGal3</ref>&lt; _Scalar &gt;, 0 &gt; &gt;</type>
        <definition>using Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;::Base =  manif::SGal3Base&lt;Map&lt;const manif::SGal3&lt;_Scalar&gt;, 0&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/sgal3/SGal3_map.h" line="65" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/sgal3/SGal3_map.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_eigen_1_1_map_3_01const_01manif_1_1_s_gal3_3_01___scalar_01_4_00_010_01_4_1a671fd4fb7cc29d5b76111cb6086e392e" prot="protected" static="no" mutable="no">
        <type>const DataType</type>
        <definition>const DataType Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/sgal3/SGal3_map.h" line="79" column="18" bodyfile="/home/runner/work/manif/manif/include/manif/impl/sgal3/SGal3_map.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_eigen_1_1_map_3_01const_01manif_1_1_s_gal3_3_01___scalar_01_4_00_010_01_4_1abdbd3010f3c9ae031b620ce88c248333" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>MANIF_COMPLETE_GROUP_TYPEDEF MANIF_INHERIT_GROUP_API</type>
        <definition>MANIF_COMPLETE_GROUP_TYPEDEF MANIF_INHERIT_GROUP_API Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;::Map</definition>
        <argsstring>(const Scalar *coeffs)</argsstring>
        <name>Map</name>
        <param>
          <type>const Scalar *</type>
          <declname>coeffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/sgal3/SGal3_map.h" line="73" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/sgal3/SGal3_map.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_eigen_1_1_map_3_01const_01manif_1_1_s_gal3_3_01___scalar_01_4_00_010_01_4_1ac559605080a29b593ec0e4608a12f12d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const DataType &amp;</type>
        <definition>const DataType&amp; Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;::coeffs</definition>
        <argsstring>() const</argsstring>
        <name>coeffs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/sgal3/SGal3_map.h" line="75" column="18" bodyfile="/home/runner/work/manif/manif/include/manif/impl/sgal3/SGal3_map.h" bodystart="75" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Specialization of Map for const <ref refid="structmanif_1_1_s_gal3" kindref="compound">manif::SGal3</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01const_01manif_1_1_s_gal3_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>manif::SGal3Base&lt; Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_gal3_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>manif::LieGroupBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_lie_group_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01const_01manif_1_1_s_gal3_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>manif::SGal3Base&lt; Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_gal3_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>manif::LieGroupBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_lie_group_base"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/manif/manif/include/manif/impl/sgal3/SGal3_map.h" line="63" column="1" bodyfile="/home/runner/work/manif/manif/include/manif/impl/sgal3/SGal3_map.h" bodystart="64" bodyend="80"/>
    <listofallmembers>
      <member refid="structmanif_1_1_lie_group_base_1a7fe44175f7ad70476c640d4745d7c6c9" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>_</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a6c10caf6f8e70dcc3ecea3e3828333e2" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>act</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1aa0e22e12510c5d48176b3cd0c72b423b" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>act</name></member>
      <member refid="structmanif_1_1_lie_group_base_1adc60eaf39fd497125f94e7b437f5d86f" prot="public" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>act</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a020d58bfad02ef653284ea9a2138c04c" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>adj</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1aa158555bb26ba03f1c58fb120e3d69b3" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>asSO3</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1aa5bac621f65f556364780eaafafc257b" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>asSO3</name></member>
      <member refid="class_eigen_1_1_map_3_01const_01manif_1_1_s_gal3_3_01___scalar_01_4_00_010_01_4_1a2c1aea33ca6e30e1fa6eedacc91f004b" prot="private" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>Base</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7351c9a0e8fe51c72978626efa12d97c" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>between</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad0db8fc1317d2ea0f6f210a6b274ec88" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>cast</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a0ef0052589be75ef70ca7770cf73def7" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>cast</name></member>
      <member refid="class_eigen_1_1_map_3_01const_01manif_1_1_s_gal3_3_01___scalar_01_4_00_010_01_4_1ac559605080a29b593ec0e4608a12f12d" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>coeffs</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a1ac9dd89b140080b8b0284c8bdfb5270" prot="public" virt="non-virtual" ambiguityscope="SGal3Base&lt; Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt; &gt;::"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>coeffs</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a25bda459a0fa6986f7aa45b50af74a2b" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>compose</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7d766d75afce68d88e7b83108b1bde3d" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>data</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a58250b5749c58fe57a7ecd14c4009dd0" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>data</name></member>
      <member refid="class_eigen_1_1_map_3_01const_01manif_1_1_s_gal3_3_01___scalar_01_4_00_010_01_4_1a671fd4fb7cc29d5b76111cb6086e392e" prot="protected" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>data_</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a59562d75de51334eab68426521a4e923" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>DataType</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a7ce9db9ccb753dbe014d050fad09c385" prot="protected" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>derived</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a9380b9ee1ed9bbdcf3dcf284571f6901" prot="protected" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>derived</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7ce9db9ccb753dbe014d050fad09c385" prot="protected" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>derived</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a9380b9ee1ed9bbdcf3dcf284571f6901" prot="protected" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>derived</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a42a00de7f4c6ae7e8a11568dfd4a43a8" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>Dim</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a613898f9799c5317567b33a1fabe726e" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>DoF</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a34a63b85f977cb40012be342f902404a" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>Identity</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a45e50d670fc666cc2a21aa19810902c0" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>inverse</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ac4d00c4834b1415eef9fb7a14dc8f708" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>isApprox</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1ab8acf6f7de6380c3c9c27736a4a12a0a" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>Isometry</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1aebb95eebb7b1c8acc204424b6d6accbc" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>isometry</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ac02491bfe309ff4a384ca4394f153d6c" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>Jacobian</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a1f015474f257f800bcd826787b26bcfc" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>LieGroup</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a536b5307a15fd40b0e5eb87c0344d6a8" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>LieGroupTemplate</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a73d3fd6a810e1dff845c2ecc218bc13c" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>lift</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a9c9651634b17699b464a9cbcde09b8d3" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>LinearVelocity</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1ad66d6fdf2cb0fb95e4dd556de9d18f61" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>linearVelocity</name></member>
      <member refid="structmanif_1_1_lie_group_base_1aef8d336d81a657e541e5ff48e5a08b1c" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>lminus</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1ac2cc0992b6d20e977d7f03c1866773e1" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>log</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad6af777d6c8914c59ce88a76db6f4775" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>lplus</name></member>
      <member refid="class_eigen_1_1_map_3_01const_01manif_1_1_s_gal3_3_01___scalar_01_4_00_010_01_4_1abdbd3010f3c9ae031b620ce88c248333" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>Map</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a3912f9ef389576c9038ce2d544b4b833" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>minus</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a7efdfe3481251ad2744708f0deb7cd2c" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>normalize</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a4e49d3cf3538e03ff7d19c1602da19cc" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>operator*</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a019031c758bfb21a7030cd97843d4b4d" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>operator*=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a1a497184154ab95cc4cc4d14eb07c513" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>operator+</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a2a3e11651c59644d8f5f3705d0b257de" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>operator+=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1af59dd9dc829de8f8f49ecf4bee27fedd" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>operator-</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ac411dc1b8a4456a3bae4afd152abddaa" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ab3b5b3153e4d50982f9f71d104c8c37f" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a2b270c001e289786a499d76d886a5869" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a5d68ac830a6191abb32eccc874612bef" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>operator==</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7eb3084333fc8887e2fca17484eb8b81" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>operator[]</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad6e624bd8270cec712a65f215d361b92" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>operator[]</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a9e323b97f09981a2b0d1973f8d81b21b" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>OptJacobianRef</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a74d5760f793fbfdeec248b34b3360d1c" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>plus</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a0c72671ad8375fda9a193f5002fa65e9" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>quat</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1ada77b53a5541bdad5cd6af1d84b53b47" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>QuaternionDataType</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a0c1def597571453671f7762c4e511e05" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>Random</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a229272dd86ff795a11848855b7072b20" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>RepSize</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad6c5f9dc430ca6b0ff1eb5cc58c9faed" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>rminus</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a02329cee8e1bf4b785e85cc5eb04713b" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>Rotation</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a3e14addb43064df49a50e385f81db28d" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>rotation</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a2a36d6106e38cd7fac46510e6458a119" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>rplus</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7215753f62eaeced0a3c8f53147938e3" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>Scalar</name></member>
      <member refid="structmanif_1_1_lie_group_base_1aa154961cb80b013d3d1d66132e487f33" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>setIdentity</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a3d9dc0ea239fa48ca9d75d11e08e020d" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>setRandom</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a87b9295ceffbca507f4a056a20260fc1" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>size</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a8107b5df2bf76b5dee521ffbb0156366" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>t</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ab920e7e67b4e174ad7e291cd10945827" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>Tangent</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a2ead4808f2bd51271ff1a8f2701740ae" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>Time</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1adab790d905faf56435120be1285265b5" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>transform</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1ac6c3251eb90da408174b169fdcea726f" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>Transformation</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a13d2a4fac8d447c386070d21b51bc53d" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>Translation</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a21ea39f7c50302edaaebee9688b20337" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>translation</name></member>
      <member refid="structmanif_1_1_lie_group_base_1aefcb523771afb5c59a70fb2d869598eb" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>Vector</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a9388d5ef5a7acfdfa14e1d5d7cddcbe6" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>vx</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a2037442a3e8af9a35ca86bba47b197d5" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>vy</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a17382a4370d9cba83b1c4c842523d1c5" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>vz</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a0070c8798526b4f0805911dfdf10d75a" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>x</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1a2c7392afa655d60fa6e558fe049168c4" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>y</name></member>
      <member refid="structmanif_1_1_s_gal3_base_1ad16b38c519ab7172cbf5e16c0f487fad" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; const manif::SGal3&lt; _Scalar &gt;, 0 &gt;</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
