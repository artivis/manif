<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structmanif_1_1_tangent_base" kind="struct" language="C++" prot="public">
    <compoundname>manif::TangentBase</compoundname>
    <derivedcompoundref refid="structmanif_1_1_bundle_tangent_base" prot="public" virt="non-virtual">manif::BundleTangentBase&lt; BundleTangent&lt; _Scalar, _T... &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_bundle_tangent_base" prot="public" virt="non-virtual">manif::BundleTangentBase&lt; Map&lt; manif::BundleTangent&lt; _Scalar, T... &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_bundle_tangent_base" prot="public" virt="non-virtual">manif::BundleTangentBase&lt; Map&lt; const manif::BundleTangent&lt; _Scalar, T... &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_rn_tangent_base" prot="public" virt="non-virtual">manif::RnTangentBase&lt; RnTangent&lt; _Scalar, _N &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_rn_tangent_base" prot="public" virt="non-virtual">manif::RnTangentBase&lt; Map&lt; const manif::RnTangent&lt; _Scalar, _N &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_rn_tangent_base" prot="public" virt="non-virtual">manif::RnTangentBase&lt; Map&lt; manif::RnTangent&lt; _Scalar, _N &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_e2_tangent_base" prot="public" virt="non-virtual">manif::SE2TangentBase&lt; Map&lt; const manif::SE2Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_e2_tangent_base" prot="public" virt="non-virtual">manif::SE2TangentBase&lt; SE2Tangent&lt; _Scalar &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_e2_tangent_base" prot="public" virt="non-virtual">manif::SE2TangentBase&lt; Map&lt; manif::SE2Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_e3_tangent_base" prot="public" virt="non-virtual">manif::SE3TangentBase&lt; Map&lt; manif::SE3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_e3_tangent_base" prot="public" virt="non-virtual">manif::SE3TangentBase&lt; SE3Tangent&lt; _Scalar &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_e3_tangent_base" prot="public" virt="non-virtual">manif::SE3TangentBase&lt; Map&lt; const manif::SE3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_e__2__3_tangent_base" prot="public" virt="non-virtual">manif::SE_2_3TangentBase&lt; Map&lt; manif::SE_2_3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_e__2__3_tangent_base" prot="public" virt="non-virtual">manif::SE_2_3TangentBase&lt; Map&lt; const manif::SE_2_3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_e__2__3_tangent_base" prot="public" virt="non-virtual">manif::SE_2_3TangentBase&lt; SE_2_3Tangent&lt; _Scalar &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_gal3_tangent_base" prot="public" virt="non-virtual">manif::SGal3TangentBase&lt; SGal3Tangent&lt; _Scalar &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_gal3_tangent_base" prot="public" virt="non-virtual">manif::SGal3TangentBase&lt; Map&lt; const manif::SGal3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_gal3_tangent_base" prot="public" virt="non-virtual">manif::SGal3TangentBase&lt; Map&lt; manif::SGal3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_o2_tangent_base" prot="public" virt="non-virtual">manif::SO2TangentBase&lt; Map&lt; manif::SO2Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_o2_tangent_base" prot="public" virt="non-virtual">manif::SO2TangentBase&lt; Map&lt; const manif::SO2Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_o2_tangent_base" prot="public" virt="non-virtual">manif::SO2TangentBase&lt; SO2Tangent&lt; _Scalar &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_o3_tangent_base" prot="public" virt="non-virtual">manif::SO3TangentBase&lt; SO3Tangent&lt; _Scalar &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_o3_tangent_base" prot="public" virt="non-virtual">manif::SO3TangentBase&lt; Map&lt; const manif::SO3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_o3_tangent_base" prot="public" virt="non-virtual">manif::SO3TangentBase&lt; Map&lt; manif::SO3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_bundle_tangent_base" prot="public" virt="non-virtual">manif::BundleTangentBase&lt; _Derived &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_rn_tangent_base" prot="public" virt="non-virtual">manif::RnTangentBase&lt; _Derived &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_e2_tangent_base" prot="public" virt="non-virtual">manif::SE2TangentBase&lt; _Derived &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_e3_tangent_base" prot="public" virt="non-virtual">manif::SE3TangentBase&lt; _Derived &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_e__2__3_tangent_base" prot="public" virt="non-virtual">manif::SE_2_3TangentBase&lt; _Derived &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_gal3_tangent_base" prot="public" virt="non-virtual">manif::SGal3TangentBase&lt; _Derived &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_o2_tangent_base" prot="public" virt="non-virtual">manif::SO2TangentBase&lt; _Derived &gt;</derivedcompoundref>
    <derivedcompoundref refid="structmanif_1_1_s_o3_tangent_base" prot="public" virt="non-virtual">manif::SO3TangentBase&lt; _Derived &gt;</derivedcompoundref>
    <includes refid="tangent__base_8h" local="no">tangent_base.h</includes>
    <templateparamlist>
      <param>
        <type>class _Derived</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structmanif_1_1_tangent_base_1a5e950e12d3b90e86b9e8d1c88ae44d3c" prot="public" static="no">
        <type>typename <ref refid="structmanif_1_1internal_1_1traits" kindref="compound">internal::traits</ref>&lt; _Derived &gt;::Scalar</type>
        <definition>using manif::TangentBase&lt; _Derived &gt;::Scalar =  typename internal::traits&lt;_Derived&gt;::Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="28" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_tangent_base_1a2662a9b7a2dc0d5b1d34e1517e258300" prot="public" static="no">
        <type>typename <ref refid="structmanif_1_1internal_1_1traits" kindref="compound">internal::traits</ref>&lt; _Derived &gt;::LieGroup</type>
        <definition>using manif::TangentBase&lt; _Derived &gt;::LieGroup =  typename internal::traits&lt;_Derived&gt;::LieGroup</definition>
        <argsstring></argsstring>
        <name>LieGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="29" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_tangent_base_1a28e3e53e1c1c91f29a8417e7e3a3a654" prot="public" static="no">
        <type>typename <ref refid="structmanif_1_1internal_1_1traits" kindref="compound">internal::traits</ref>&lt; _Derived &gt;::Tangent</type>
        <definition>using manif::TangentBase&lt; _Derived &gt;::Tangent =  typename internal::traits&lt;_Derived&gt;::Tangent</definition>
        <argsstring></argsstring>
        <name>Tangent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="30" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_tangent_base_1adf320fca86420a44f1e80cf003800dfb" prot="public" static="no">
        <type>typename <ref refid="structmanif_1_1internal_1_1traits" kindref="compound">internal::traits</ref>&lt; _Derived &gt;::DataType</type>
        <definition>using manif::TangentBase&lt; _Derived &gt;::DataType =  typename internal::traits&lt;_Derived&gt;::DataType</definition>
        <argsstring></argsstring>
        <name>DataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="31" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_tangent_base_1ab8e7408713b9750c12418ae9ba9dbd90" prot="public" static="no">
        <type>typename <ref refid="structmanif_1_1internal_1_1traits" kindref="compound">internal::traits</ref>&lt; _Derived &gt;::Jacobian</type>
        <definition>using manif::TangentBase&lt; _Derived &gt;::Jacobian =  typename internal::traits&lt;_Derived&gt;::Jacobian</definition>
        <argsstring></argsstring>
        <name>Jacobian</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="32" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_tangent_base_1a8baef49ae68f130cda30e49f6f402999" prot="public" static="no">
        <type>typename <ref refid="structmanif_1_1internal_1_1traits" kindref="compound">internal::traits</ref>&lt; _Derived &gt;::LieAlg</type>
        <definition>using manif::TangentBase&lt; _Derived &gt;::LieAlg =  typename internal::traits&lt;_Derived&gt;::LieAlg</definition>
        <argsstring></argsstring>
        <name>LieAlg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="33" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_tangent_base_1a151e1d9be260ac7bab172b950017a57c" prot="public" static="no">
        <type>Jacobian</type>
        <definition>using manif::TangentBase&lt; _Derived &gt;::InnerWeightsMatrix =  Jacobian</definition>
        <argsstring></argsstring>
        <name>InnerWeightsMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="35" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_tangent_base_1ab26fdad01bd80b6c628465f4b82a0411" prot="public" static="no">
        <type>tl::optional&lt; Eigen::Ref&lt; Jacobian &gt; &gt;</type>
        <definition>using manif::TangentBase&lt; _Derived &gt;::OptJacobianRef =  tl::optional&lt;Eigen::Ref&lt;Jacobian&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>OptJacobianRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="37" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmanif_1_1_tangent_base_1a0c8b928c0e5710577fe171046920411c" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename _Scalar</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structmanif_1_1internal_1_1traitscast" kindref="compound">internal::traitscast</ref>&lt; Tangent, _Scalar &gt;::<ref refid="structmanif_1_1_tangent_base_1a9c4d27fc308816b507af1734a42c01c1" kindref="member">cast</ref></type>
        <definition>using manif::TangentBase&lt; _Derived &gt;::TangentTemplate =  typename internal::traitscast&lt;Tangent, _Scalar&gt;::cast</definition>
        <argsstring></argsstring>
        <name>TangentTemplate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="40" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structmanif_1_1_tangent_base_1a6c72f3d4af207ef853df0387a31a8334" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int manif::TangentBase&lt; _Derived &gt;::Dim</definition>
        <argsstring></argsstring>
        <name>Dim</name>
        <initializer>= <ref refid="structmanif_1_1internal_1_1traits" kindref="compound">internal::traits</ref>&lt;_Derived&gt;::Dim</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="24" column="24" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmanif_1_1_tangent_base_1abc26abf20f27e8ba2353557c565c04fd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int manif::TangentBase&lt; _Derived &gt;::RepSize</definition>
        <argsstring></argsstring>
        <name>RepSize</name>
        <initializer>= <ref refid="structmanif_1_1internal_1_1traits" kindref="compound">internal::traits</ref>&lt;_Derived&gt;::RepSize</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="25" column="24" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmanif_1_1_tangent_base_1a10a74cacca2371dfe8260727bd9bdf37" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int manif::TangentBase&lt; _Derived &gt;::DoF</definition>
        <argsstring></argsstring>
        <name>DoF</name>
        <initializer>= <ref refid="structmanif_1_1internal_1_1traits" kindref="compound">internal::traits</ref>&lt;_Derived&gt;::DoF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="26" column="24" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a414b302f5e268f819a0e992f18dd682d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>_Derived &amp;</type>
        <definition>_Derived &amp; manif::TangentBase&lt; _Derived &gt;::operator=</definition>
        <argsstring>(const TangentBase &amp;t)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structmanif_1_1_tangent_base" kindref="compound">TangentBase</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>An element of the same Tangent group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to this. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="53" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="366" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a2703d13faf7a912f8078129b2a4e66c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _DerivedOther</type>
          </param>
        </templateparamlist>
        <type>_Derived &amp;</type>
        <definition>_Derived &amp; manif::TangentBase&lt; _Derived &gt;::operator=</definition>
        <argsstring>(const TangentBase&lt; _DerivedOther &gt; &amp;t)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structmanif_1_1_tangent_base" kindref="compound">TangentBase</ref>&lt; _DerivedOther &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>An element of the same Tangent group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to this. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="61" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="375" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1ab8fc7edb0d20e2ecda82fd6d536cb425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _EigenDerived</type>
          </param>
        </templateparamlist>
        <type>_Derived &amp;</type>
        <definition>_Derived &amp; manif::TangentBase&lt; _Derived &gt;::operator=</definition>
        <argsstring>(const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>A DataType object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to this. </para>
</simplesect>
<simplesect kind="see"><para>DataType. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="70" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="384" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a573f842dc25ee3125f8959ccdacb5240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DataType &amp;</type>
        <definition>TangentBase&lt; _Derived &gt;::DataType &amp; manif::TangentBase&lt; _Derived &gt;::coeffs</definition>
        <argsstring>()</argsstring>
        <name>coeffs</name>
        <briefdescription>
<para>Access the underlying data by reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="73" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="392" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a2e28e350e07e2ec1d2a164bd39d3370a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const DataType &amp;</type>
        <definition>const TangentBase&lt; _Derived &gt;::DataType &amp; manif::TangentBase&lt; _Derived &gt;::coeffs</definition>
        <argsstring>() const</argsstring>
        <name>coeffs</name>
        <briefdescription>
<para>Access the underlying data by const reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="75" column="18" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="399" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a6004be883d35b1e2a1ac04efd63c7443" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Scalar *</type>
        <definition>TangentBase&lt; _Derived &gt;::Scalar * manif::TangentBase&lt; _Derived &gt;::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
<para>Access the underlying data by pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="78" column="10" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="406" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a56bf87afd42cd3c795d1a2878ca99010" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Scalar *</type>
        <definition>const TangentBase&lt; _Derived &gt;::Scalar * manif::TangentBase&lt; _Derived &gt;::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
<para>Access the underlying data by const pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="80" column="16" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="413" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a9c4d27fc308816b507af1734a42c01c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class _NewScalar</type>
          </param>
        </templateparamlist>
        <type>TangentTemplate&lt; _NewScalar &gt;</type>
        <definition>TangentTemplate&lt;_NewScalar&gt; manif::TangentBase&lt; _Derived &gt;::cast</definition>
        <argsstring>() const</argsstring>
        <name>cast</name>
        <briefdescription>
<para>Cast the Tangent object to a copy of a different scalar type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="85" column="19"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a04926ad935d5d3504cb69123128b5022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>_Derived &amp;</type>
        <definition>_Derived &amp; manif::TangentBase&lt; _Derived &gt;::setZero</definition>
        <argsstring>()</argsstring>
        <name>setZero</name>
        <briefdescription>
<para>Set the Tangent object this to Zero. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to this. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="93" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="427" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1af7bd211079a17ccc135877c1d96aaeed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>_Derived &amp;</type>
        <definition>_Derived &amp; manif::TangentBase&lt; _Derived &gt;::setRandom</definition>
        <argsstring>()</argsstring>
        <name>setRandom</name>
        <briefdescription>
<para>Set the LieGroup object this to a random value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to this. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="99" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="434" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a2dbd4f126e05b21b0adee045844579a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>LieAlg</type>
        <definition>TangentBase&lt; _Derived &gt;::LieAlg manif::TangentBase&lt; _Derived &gt;::generator</definition>
        <argsstring>(const int i) const</argsstring>
        <name>generator</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Get the ith basis element of the Lie Algebra. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the ith basis element of the Lie Algebra. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="108" column="10" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="459" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a7f05a48c9ffd4d5f582f0062c8bf9f55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>InnerWeightsMatrix</type>
        <definition>TangentBase&lt; _Derived &gt;::InnerWeightsMatrix manif::TangentBase&lt; _Derived &gt;::innerWeights</definition>
        <argsstring>() const</argsstring>
        <name>innerWeights</name>
        <briefdescription>
<para>Get the weight matrix of the Weighted Euclidean inner product, relative to the space basis. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the weight matrix. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structmanif_1_1_tangent_base_1a2dbd4f126e05b21b0adee045844579a4" kindref="member">generator</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="116" column="22" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="466" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a83d40f212a18ed4c9b28e56ca4f5704c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _DerivedOther</type>
          </param>
        </templateparamlist>
        <type>Scalar</type>
        <definition>TangentBase&lt; _Derived &gt;::Scalar manif::TangentBase&lt; _Derived &gt;::inner</definition>
        <argsstring>(const TangentBase&lt; _DerivedOther &gt; &amp;t) const</argsstring>
        <name>inner</name>
        <param>
          <type>const <ref refid="structmanif_1_1_tangent_base" kindref="compound">TangentBase</ref>&lt; _DerivedOther &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Get inner product of this and another Tangent weighted by W. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The inner product of this and t. </para>
</simplesect>
<simplesect kind="note"><para>ip = v0&apos; . W . v1 </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structmanif_1_1_tangent_base_1a7f05a48c9ffd4d5f582f0062c8bf9f55" kindref="member">innerWeights()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="126" column="10" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="474" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1aebc062717b43ce0d4f623191b3a4e626" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Scalar</type>
        <definition>TangentBase&lt; _Derived &gt;::Scalar manif::TangentBase&lt; _Derived &gt;::weightedNorm</definition>
        <argsstring>() const</argsstring>
        <name>weightedNorm</name>
        <briefdescription>
<para>Get the Euclidean weighted norm. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The Euclidean weighted norm. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structmanif_1_1_tangent_base_1a7f05a48c9ffd4d5f582f0062c8bf9f55" kindref="member">innerWeights()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structmanif_1_1_tangent_base_1a7439ba89e703a34202391e2a6a9aeda1" kindref="member">squaredWeightedNorm()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="134" column="10" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="481" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a7439ba89e703a34202391e2a6a9aeda1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Scalar</type>
        <definition>TangentBase&lt; _Derived &gt;::Scalar manif::TangentBase&lt; _Derived &gt;::squaredWeightedNorm</definition>
        <argsstring>() const</argsstring>
        <name>squaredWeightedNorm</name>
        <briefdescription>
<para>Get the squared Euclidean weighted norm. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The squared Euclidean weighted norm. </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structmanif_1_1_tangent_base_1a7f05a48c9ffd4d5f582f0062c8bf9f55" kindref="member">innerWeights()</ref> </para>
</simplesect>
<simplesect kind="see"><para>WeightedNorm() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="142" column="10" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="489" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a8e9722a81dfde9006f26c1ff0d2a65fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>LieAlg</type>
        <definition>TangentBase&lt; _Derived &gt;::LieAlg manif::TangentBase&lt; _Derived &gt;::hat</definition>
        <argsstring>() const</argsstring>
        <name>hat</name>
        <briefdescription>
<para>Hat operator of the Tangent element. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The isomorphic element in the Lie algebra. </para>
</simplesect>
<simplesect kind="note"><para>See Eq. (10). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="149" column="10" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="496" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a9720e984db5900bce796bf47cda977ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>LieGroup</type>
        <definition>TangentBase&lt; _Derived &gt;::LieGroup manif::TangentBase&lt; _Derived &gt;::exp</definition>
        <argsstring>(OptJacobianRef J_m_t=OptJacobianRef{}) const</argsstring>
        <name>exp</name>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_m_t</declname>
          <defval>OptJacobianRef{}</defval>
        </param>
        <briefdescription>
<para>Get the Lie group element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">-optional-</parametername>
</parameternamelist>
<parameterdescription>
<para>J_m_t Jacobian of the Lie groupe element wrt this. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Associated Lie group element. </para>
</simplesect>
<simplesect kind="note"><para>This is the <ref refid="structmanif_1_1_tangent_base_1a9720e984db5900bce796bf47cda977ee" kindref="member">exp()</ref> map with the argument in vector form. </para>
</simplesect>
<simplesect kind="note"><para>See Eq. (23). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="158" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="445" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a16ec60694f825f03727e09f257d6da1f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>MANIF_DEPRECATED LieGroup</type>
        <definition>TangentBase&lt; _Derived &gt;::LieGroup manif::TangentBase&lt; _Derived &gt;::retract</definition>
        <argsstring>(OptJacobianRef J_m_t=OptJacobianRef{}) const</argsstring>
        <name>retract</name>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_m_t</declname>
          <defval>OptJacobianRef{}</defval>
        </param>
        <briefdescription>
<para>This function is deprecated. Please considere using <ref refid="structmanif_1_1_tangent_base_1a9720e984db5900bce796bf47cda977ee" kindref="member">exp</ref> instead. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="167" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="452" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a4533ec7b13c30b5ec8fb1d5c84039502" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>LieGroup</type>
        <definition>TangentBase&lt; _Derived &gt;::LieGroup manif::TangentBase&lt; _Derived &gt;::rplus</definition>
        <argsstring>(const LieGroup &amp;m, OptJacobianRef J_mout_t={}, OptJacobianRef J_mout_m={}) const</argsstring>
        <name>rplus</name>
        <param>
          <type>const LieGroup &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_mout_t</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_mout_m</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Right oplus operation of the Lie group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>An element of the tangent of the Lie group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">-optional-</parametername>
</parameternamelist>
<parameterdescription>
<para>J_mout_t Jacobian of the oplus operation wrt this. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">-optional-</parametername>
</parameternamelist>
<parameterdescription>
<para>J_mout_m Jacobian of the oplus operation wrt group element. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An element of the Lie group. </para>
</simplesect>
<simplesect kind="note"><para>See Eq. (25). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="178" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="503" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a375b870e90fabfce45b5a74c46c54b62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>LieGroup</type>
        <definition>TangentBase&lt; _Derived &gt;::LieGroup manif::TangentBase&lt; _Derived &gt;::lplus</definition>
        <argsstring>(const LieGroup &amp;m, OptJacobianRef J_mout_t={}, OptJacobianRef J_mout_m={}) const</argsstring>
        <name>lplus</name>
        <param>
          <type>const LieGroup &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_mout_t</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_mout_m</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Left oplus operation of the Lie group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>An element of the tangent of the Lie group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">-optional-</parametername>
</parameternamelist>
<parameterdescription>
<para>J_mout_t Jacobian of the oplus operation wrt this. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">-optional-</parametername>
</parameternamelist>
<parameterdescription>
<para>J_mout_m Jacobian of the oplus operation wrt the group element. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An element of the Lie group. </para>
</simplesect>
<simplesect kind="note"><para>See Eq. (27). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="190" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="512" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a08bbcf10f4f7ed8210566e3a12556c8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>LieGroup</type>
        <definition>TangentBase&lt; _Derived &gt;::LieGroup manif::TangentBase&lt; _Derived &gt;::plus</definition>
        <argsstring>(const LieGroup &amp;m, OptJacobianRef J_mout_t={}, OptJacobianRef J_mout_m={}) const</argsstring>
        <name>plus</name>
        <param>
          <type>const LieGroup &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_mout_t</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_mout_m</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>An alias for the right oplus operation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structmanif_1_1_tangent_base_1a4533ec7b13c30b5ec8fb1d5c84039502" kindref="member">rplus</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="198" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="521" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a606e1b9c212b8320f65378437d302c0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _DerivedOther</type>
          </param>
        </templateparamlist>
        <type>Tangent</type>
        <definition>TangentBase&lt; _Derived &gt;::Tangent manif::TangentBase&lt; _Derived &gt;::plus</definition>
        <argsstring>(const TangentBase&lt; _DerivedOther &gt; &amp;t, OptJacobianRef J_mout_ta={}, OptJacobianRef J_mout_tb={}) const</argsstring>
        <name>plus</name>
        <param>
          <type>const <ref refid="structmanif_1_1_tangent_base" kindref="compound">TangentBase</ref>&lt; _DerivedOther &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_mout_ta</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_mout_tb</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="203" column="11" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="531" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1acc8d41b513681114f8091f53d81626a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _DerivedOther</type>
          </param>
        </templateparamlist>
        <type>Tangent</type>
        <definition>TangentBase&lt; _Derived &gt;::Tangent manif::TangentBase&lt; _Derived &gt;::minus</definition>
        <argsstring>(const TangentBase&lt; _DerivedOther &gt; &amp;t, OptJacobianRef J_mout_ta={}, OptJacobianRef J_mout_tb={}) const</argsstring>
        <name>minus</name>
        <param>
          <type>const <ref refid="structmanif_1_1_tangent_base" kindref="compound">TangentBase</ref>&lt; _DerivedOther &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_mout_ta</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>OptJacobianRef</type>
          <declname>J_mout_tb</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="208" column="11" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="547" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a11c72414544c6161c77ff3683b58d94c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Jacobian</type>
        <definition>TangentBase&lt; _Derived &gt;::Jacobian manif::TangentBase&lt; _Derived &gt;::rjac</definition>
        <argsstring>() const</argsstring>
        <name>rjac</name>
        <briefdescription>
<para>Get the right Jacobian. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this is the right Jacobian of <ref refid="structmanif_1_1_tangent_base_1a9720e984db5900bce796bf47cda977ee" kindref="member">exp</ref>, what is commonly known as &quot;the right Jacobian&quot;. </para>
</simplesect>
<simplesect kind="note"><para>See Eq. (41) for the right Jacobian of general functions. </para>
</simplesect>
<simplesect kind="note"><para>See Eqs. (126,143,163,179,191) for implementations of the right Jacobian of <ref refid="structmanif_1_1_tangent_base_1a9720e984db5900bce796bf47cda977ee" kindref="member">exp</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="218" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="565" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a7a2388b41455b45aee88a3be3fa76f0e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Jacobian</type>
        <definition>TangentBase&lt; _Derived &gt;::Jacobian manif::TangentBase&lt; _Derived &gt;::ljac</definition>
        <argsstring>() const</argsstring>
        <name>ljac</name>
        <briefdescription>
<para>Get the left Jacobian. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this is the left Jacobian of <ref refid="structmanif_1_1_tangent_base_1a9720e984db5900bce796bf47cda977ee" kindref="member">exp</ref>, what is commonly known as &quot;the left Jacobian&quot;. </para>
</simplesect>
<simplesect kind="note"><para>See Eq. (44) for the left Jacobian of general functions. </para>
</simplesect>
<simplesect kind="note"><para>See Eqs. (126,145,164,179,191) for implementations of the left Jacobian of <ref refid="structmanif_1_1_tangent_base_1a9720e984db5900bce796bf47cda977ee" kindref="member">exp</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="226" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="572" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1ad06291edca01f9a97aaf338b414d2897" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>_Derived</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; <ref refid="structmanif_1_1internal_1_1has__rjacinv" kindref="compound">internal::has_rjacinv</ref>&lt; U &gt;::value, typename <ref refid="structmanif_1_1_tangent_base" kindref="compound">TangentBase</ref>&lt; U &gt;::Jacobian &gt;::type</type>
        <definition>std::enable_if&lt; ! internal::has_rjacinv&lt; U &gt;::value, typename TangentBase&lt; U &gt;::Jacobian &gt;::type manif::TangentBase&lt; _Derived &gt;::rjacinv</definition>
        <argsstring>() const</argsstring>
        <name>rjacinv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Calls Derived&apos;s &apos;overload&apos; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="232" column="10" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="583" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a87ed7fdbe3f5cf3a8f9e27f58f4e8743" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>_Derived</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; ! <ref refid="structmanif_1_1internal_1_1has__rjacinv" kindref="compound">internal::has_rjacinv</ref>&lt; U &gt;::value, typename <ref refid="structmanif_1_1_tangent_base" kindref="compound">TangentBase</ref>&lt; U &gt;::Jacobian &gt;::type</type>
        <definition>std::enable_if&lt; ! internal::has_rjacinv&lt;U&gt;::value, typename TangentBase&lt;U&gt;::Jacobian&gt;::type manif::TangentBase&lt; _Derived &gt;::rjacinv</definition>
        <argsstring>() const</argsstring>
        <name>rjacinv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Calls Base default impl </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="238" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a78c6848ad03d27864eb9633da29b27e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>_Derived</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; <ref refid="structmanif_1_1internal_1_1has__ljacinv" kindref="compound">internal::has_ljacinv</ref>&lt; U &gt;::value, typename <ref refid="structmanif_1_1_tangent_base" kindref="compound">TangentBase</ref>&lt; U &gt;::Jacobian &gt;::type</type>
        <definition>std::enable_if&lt; ! internal::has_ljacinv&lt; U &gt;::value, typename TangentBase&lt; U &gt;::Jacobian &gt;::type manif::TangentBase&lt; _Derived &gt;::ljacinv</definition>
        <argsstring>() const</argsstring>
        <name>ljacinv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Calls Derived&apos;s &apos;overload&apos; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="244" column="10" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="603" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a2a7e0e996eef0cb4bd537d172f04cdb2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>_Derived</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; ! <ref refid="structmanif_1_1internal_1_1has__ljacinv" kindref="compound">internal::has_ljacinv</ref>&lt; U &gt;::value, typename <ref refid="structmanif_1_1_tangent_base" kindref="compound">TangentBase</ref>&lt; U &gt;::Jacobian &gt;::type</type>
        <definition>std::enable_if&lt; ! internal::has_ljacinv&lt;U&gt;::value, typename TangentBase&lt;U&gt;::Jacobian&gt;::type manif::TangentBase&lt; _Derived &gt;::ljacinv</definition>
        <argsstring>() const</argsstring>
        <name>ljacinv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Calls Base default impl </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="250" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1acd95afc304c76ec8df6d8e8da676d90c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Jacobian</type>
        <definition>TangentBase&lt; _Derived &gt;::Jacobian manif::TangentBase&lt; _Derived &gt;::smallAdj</definition>
        <argsstring>() const</argsstring>
        <name>smallAdj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>[description] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="256" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="620" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a09d1ca10487c6c7cc43ff456a1664b65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _EigenDerived</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool manif::TangentBase&lt; _Derived &gt;::isApprox</definition>
        <argsstring>(const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;v, const Scalar eps=Constants&lt; Scalar &gt;::eps) const</argsstring>
        <name>isApprox</name>
        <param>
          <type>const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const Scalar</type>
          <declname>eps</declname>
          <defval><ref refid="structmanif_1_1_constants" kindref="compound">Constants</ref>&lt; Scalar &gt;::eps</defval>
        </param>
        <briefdescription>
<para>Evaluate whether this and v are &apos;close&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para>This evaluation is performed element-wise. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">v</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eps</parametername>
</parameternamelist>
<parameterdescription>
<para>Threshold for equality copmarison. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the Tangent element t is &apos;close&apos; to this, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="267" column="8" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="627" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a11263b30dc75dbdf769c86a26001c320" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _DerivedOther</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool manif::TangentBase&lt; _Derived &gt;::isApprox</definition>
        <argsstring>(const TangentBase&lt; _DerivedOther &gt; &amp;t, const Scalar eps=Constants&lt; Scalar &gt;::eps) const</argsstring>
        <name>isApprox</name>
        <param>
          <type>const <ref refid="structmanif_1_1_tangent_base" kindref="compound">TangentBase</ref>&lt; _DerivedOther &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const Scalar</type>
          <declname>eps</declname>
          <defval><ref refid="structmanif_1_1_constants" kindref="compound">Constants</ref>&lt; Scalar &gt;::eps</defval>
        </param>
        <briefdescription>
<para>Evaluate whether this and t are &apos;close&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para>This evaluation is performed element-wise. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>An element of the same Tangent group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eps</parametername>
</parameternamelist>
<parameterdescription>
<para>Threshold for equality copmarison. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the Tangent element t is &apos;close&apos; to this, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="279" column="8" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="648" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a4d991baead4165a238e5a76fd7c57db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto manif::TangentBase&lt; _Derived &gt;::operator&lt;&lt;</definition>
        <argsstring>(T &amp;&amp;v) -&gt; decltype(std::declval&lt; DataType &gt;().operator&lt;&lt;(std::forward&lt; T &gt;(v)))</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="287" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="659" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a35e627252748a0268c6ee908d2d09b12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Tangent</type>
        <definition>TangentBase&lt; _Derived &gt;::Tangent manif::TangentBase&lt; _Derived &gt;::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Equivalent to v * -1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="293" column="11" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="702" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1afc150adf396c8432ce0ba909571bd70c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>LieGroup</type>
        <definition>TangentBase&lt; _Derived &gt;::LieGroup manif::TangentBase&lt; _Derived &gt;::operator+</definition>
        <argsstring>(const LieGroup &amp;m) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const LieGroup &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Left oplus operator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structmanif_1_1_tangent_base_1a375b870e90fabfce45b5a74c46c54b62" kindref="member">lplus</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="299" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="709" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a6be164dc3b9118f3bfebd7f59b4a7a38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _DerivedOther</type>
          </param>
        </templateparamlist>
        <type>_Derived &amp;</type>
        <definition>_Derived &amp; manif::TangentBase&lt; _Derived &gt;::operator+=</definition>
        <argsstring>(const TangentBase&lt; _DerivedOther &gt; &amp;t)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="structmanif_1_1_tangent_base" kindref="compound">TangentBase</ref>&lt; _DerivedOther &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>In-place plus operator, simple vector in-place plus operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="303" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="716" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1afc51a6333c409460fc017b2303cd2484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _DerivedOther</type>
          </param>
        </templateparamlist>
        <type>_Derived &amp;</type>
        <definition>_Derived &amp; manif::TangentBase&lt; _Derived &gt;::operator-=</definition>
        <argsstring>(const TangentBase&lt; _DerivedOther &gt; &amp;t)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="structmanif_1_1_tangent_base" kindref="compound">TangentBase</ref>&lt; _DerivedOther &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>In-place minus operator, simple vector in-place minus operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="307" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="725" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a1271777d229f54a5dd0f0f12d45f043f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _EigenDerived</type>
          </param>
        </templateparamlist>
        <type>_Derived &amp;</type>
        <definition>_Derived &amp; manif::TangentBase&lt; _Derived &gt;::operator+=</definition>
        <argsstring>(const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;v)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>In-place plus operator, simple vector in-place plus operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="311" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="752" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a3fa85584b927625ddeb8f482008623c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _EigenDerived</type>
          </param>
        </templateparamlist>
        <type>_Derived &amp;</type>
        <definition>_Derived &amp; manif::TangentBase&lt; _Derived &gt;::operator-=</definition>
        <argsstring>(const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;v)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const Eigen::MatrixBase&lt; _EigenDerived &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>In-place minus operator, simple vector in-place minus operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="315" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="761" bodyend="766"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1aeec01529723a9090073be80e6e3983a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tangent</type>
        <definition>TangentBase&lt; _Derived &gt;::Tangent manif::TangentBase&lt; _Derived &gt;::operator*=</definition>
        <argsstring>(const Scalar scalar)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const Scalar</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Multiply the underlying vector with a scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="318" column="11" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="806" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1ab59f8be2812f60af208fcbb2e3683699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tangent</type>
        <definition>TangentBase&lt; _Derived &gt;::Tangent manif::TangentBase&lt; _Derived &gt;::operator/=</definition>
        <argsstring>(const Scalar scalar)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const Scalar</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Divide the underlying vector with a scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="321" column="11" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="814" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a833073611c3ee66cfd57bfb3910f98a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto manif::TangentBase&lt; _Derived &gt;::operator[]</definition>
        <argsstring>(const unsigned int i) const -&gt; decltype(coeffs()[i])</argsstring>
        <name>operator[]</name>
        <param>
          <type>const unsigned int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Access the ith coeffs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="324" column="8" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="324" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1acd41e485fbedddc6f5e958cc5c61fa45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto manif::TangentBase&lt; _Derived &gt;::operator[]</definition>
        <argsstring>(const unsigned int i) -&gt; decltype(coeffs()[i])</argsstring>
        <name>operator[]</name>
        <param>
          <type>const unsigned int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Access the ith coeffs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="329" column="8" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="329" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a41858edd33970d567b149324f2972cae" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr unsigned int</type>
        <definition>constexpr unsigned int manif::TangentBase&lt; _Derived &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>The size of the underlying vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="334" column="26" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="334" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1aaef816e134cd084829636a27a71b7aae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class _NewScalar</type>
          </param>
        </templateparamlist>
        <type><ref refid="structmanif_1_1_tangent_base" kindref="compound">TangentBase</ref>&lt; _Derived &gt;::template TangentTemplate&lt; _NewScalar &gt;</type>
        <definition>TangentBase&lt;_Derived&gt;::template TangentTemplate&lt;_NewScalar&gt; manif::TangentBase&lt; _Derived &gt;::cast</definition>
        <argsstring>() const</argsstring>
        <name>cast</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="421" column="13" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="421" bodyend="424"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a69d9ad80a547f43f038ee3f60df21ba8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tangent</type>
        <definition>TangentBase&lt; _Derived &gt;::Tangent manif::TangentBase&lt; _Derived &gt;::Zero</definition>
        <argsstring>()</argsstring>
        <name>Zero</name>
        <briefdescription>
<para>Static helper the create a Tangent object set to Zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="341" column="18" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="669" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1abdc6586b6f1bc615dc252df10a0e4f2a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Tangent</type>
        <definition>TangentBase&lt; _Derived &gt;::Tangent manif::TangentBase&lt; _Derived &gt;::Random</definition>
        <argsstring>()</argsstring>
        <name>Random</name>
        <briefdescription>
<para>Static helper the create a random Tangent object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="343" column="18" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="677" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1acce070bec9a040c8a3195168756f9b99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LieAlg</type>
        <definition>TangentBase&lt; _Derived &gt;::LieAlg manif::TangentBase&lt; _Derived &gt;::Generator</definition>
        <argsstring>(const int i)</argsstring>
        <name>Generator</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Static helper to get a Basis of the Lie group. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="345" column="17" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="684" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a0a29f4a104f11fd83823fcafa1e6b2c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>InnerWeightsMatrix</type>
        <definition>TangentBase&lt; _Derived &gt;::InnerWeightsMatrix manif::TangentBase&lt; _Derived &gt;::InnerWeights</definition>
        <argsstring>()</argsstring>
        <name>InnerWeights</name>
        <briefdescription>
<para>Static helper to get a Basis of the Lie group. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="347" column="29" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="692" bodyend="696"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1a18e1a216f401f804a09047242bf987a7" prot="protected" static="no" const="no" explicit="no" inline="yes" refqual="lvalue" noexcept="yes" virt="non-virtual">
        <type>_Derived &amp;</type>
        <definition>_Derived&amp; manif::TangentBase&lt; _Derived &gt;::derived</definition>
        <argsstring>() &amp;noexcept</argsstring>
        <name>derived</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="351" column="19" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="351" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="structmanif_1_1_tangent_base_1aa2305ee8102e265616aa35416179b377" prot="protected" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" noexcept="yes" virt="non-virtual">
        <type>const _Derived &amp;</type>
        <definition>const _Derived&amp; manif::TangentBase&lt; _Derived &gt;::derived</definition>
        <argsstring>() const &amp;noexcept</argsstring>
        <name>derived</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="352" column="25" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="352" bodyend="352"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for Lie groups&apos; tangents. Defines the minimum common API. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structmanif_1_1_lie_group_base" kindref="compound">LieGroupBase</ref>. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="25">
        <label>Eigen::Map&lt; const manif::SE3Tangent&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01const_01manif_1_1_s_e3_tangent_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>manif::SGal3TangentBase&lt; SGal3Tangent&lt; _Scalar &gt; &gt;</label>
        <link refid="structmanif_1_1_s_gal3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>Eigen::Map&lt; const manif::RnTangent&lt; _Scalar, _N &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01const_01manif_1_1_rn_tangent_3_01___scalar_00_01___n_01_4_00_010_01_4"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>manif::SO3TangentBase&lt; SO3Tangent&lt; _Scalar &gt; &gt;</label>
        <link refid="structmanif_1_1_s_o3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>manif::SE_2_3TangentBase&lt; Map&lt; manif::SE_2_3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_e__2__3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>manif::SE_2_3TangentBase&lt; Map&lt; const manif::SE_2_3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_e__2__3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Eigen::Map&lt; const manif::BundleTangent&lt; _Scalar, T... &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01const_01manif_1_1_bundle_tangent_3_01___scalar_00_01_t_8_8_8_01_4_00_010_01_4"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>manif::SE2TangentBase&lt; SE2Tangent&lt; _Scalar &gt; &gt;</label>
        <link refid="structmanif_1_1_s_e2_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>Eigen::Map&lt; manif::SO2Tangent&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01manif_1_1_s_o2_tangent_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>manif::SO2TangentBase&lt; Map&lt; const manif::SO2Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_o2_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>manif::SO2TangentBase&lt; SO2Tangent&lt; _Scalar &gt; &gt;</label>
        <link refid="structmanif_1_1_s_o2_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>manif::SE_2_3TangentBase&lt; SE_2_3Tangent&lt; _Scalar &gt; &gt;</label>
        <link refid="structmanif_1_1_s_e__2__3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>Eigen::Map&lt; const manif::SO2Tangent&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01const_01manif_1_1_s_o2_tangent_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>Eigen::Map&lt; manif::SE_2_3Tangent&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01manif_1_1_s_e__2__3_tangent_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>manif::BundleTangent&lt; _Scalar, _T &gt;</label>
        <link refid="structmanif_1_1_bundle_tangent"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="56">
        <label>manif::SO2TangentBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_s_o2_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>manif::SO3TangentBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_s_o3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>Eigen::Map&lt; manif::SE2Tangent&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01manif_1_1_s_e2_tangent_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>Eigen::Map&lt; const manif::SGal3Tangent&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01const_01manif_1_1_s_gal3_tangent_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>Eigen::Map&lt; const manif::SO3Tangent&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01const_01manif_1_1_s_o3_tangent_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
      <node id="55">
        <label>manif::SGal3TangentBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_s_gal3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>manif::SE2TangentBase&lt; Map&lt; const manif::SE2Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_e2_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>manif::SO3TangentBase&lt; Map&lt; const manif::SO3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_o3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>Eigen::Map&lt; const manif::SE_2_3Tangent&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01const_01manif_1_1_s_e__2__3_tangent_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>manif::RnTangentBase&lt; Map&lt; manif::RnTangent&lt; _Scalar, _N &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_rn_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>manif::BundleTangentBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_bundle_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>manif::SE2TangentBase&lt; Map&lt; manif::SE2Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_e2_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>manif::SE2TangentBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_s_e2_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>manif::SE3TangentBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_s_e3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>manif::SE3TangentBase&lt; SE3Tangent&lt; _Scalar &gt; &gt;</label>
        <link refid="structmanif_1_1_s_e3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>Eigen::Map&lt; manif::SGal3Tangent&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01manif_1_1_s_gal3_tangent_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>manif::SO3TangentBase&lt; Map&lt; manif::SO3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_o3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>manif::BundleTangentBase&lt; BundleTangent&lt; _Scalar, _T... &gt; &gt;</label>
        <link refid="structmanif_1_1_bundle_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>manif::SGal3Tangent&lt; _Scalar &gt;</label>
        <link refid="structmanif_1_1_s_gal3_tangent"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>manif::SE_2_3Tangent&lt; _Scalar &gt;</label>
        <link refid="structmanif_1_1_s_e__2__3_tangent"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>manif::RnTangentBase&lt; RnTangent&lt; _Scalar, _N &gt; &gt;</label>
        <link refid="structmanif_1_1_rn_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>manif::SO3Tangent&lt; _Scalar &gt;</label>
        <link refid="structmanif_1_1_s_o3_tangent"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>manif::SO2TangentBase&lt; Map&lt; manif::SO2Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_o2_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>manif::BundleTangentBase&lt; Map&lt; const manif::BundleTangent&lt; _Scalar, T... &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_bundle_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>manif::SO2Tangent&lt; _Scalar &gt;</label>
        <link refid="structmanif_1_1_s_o2_tangent"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>Eigen::Map&lt; manif::SO3Tangent&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01manif_1_1_s_o3_tangent_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>manif::RnTangent&lt; _Scalar, _N &gt;</label>
        <link refid="structmanif_1_1_rn_tangent"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>manif::RnTangentBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_rn_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>manif::BundleTangentBase&lt; Map&lt; manif::BundleTangent&lt; _Scalar, T... &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_bundle_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>manif::SE3TangentBase&lt; Map&lt; const manif::SE3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_e3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Eigen::Map&lt; manif::BundleTangent&lt; _Scalar, T... &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01manif_1_1_bundle_tangent_3_01___scalar_00_01_t_8_8_8_01_4_00_010_01_4"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>manif::SE_2_3TangentBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_s_e__2__3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>Eigen::Map&lt; manif::RnTangent&lt; _Scalar, _N &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01manif_1_1_rn_tangent_3_01___scalar_00_01___n_01_4_00_010_01_4"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>manif::SGal3TangentBase&lt; Map&lt; const manif::SGal3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_gal3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>manif::SGal3TangentBase&lt; Map&lt; manif::SGal3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_gal3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>Eigen::Map&lt; const manif::SE2Tangent&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01const_01manif_1_1_s_e2_tangent_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>manif::RnTangentBase&lt; Map&lt; const manif::RnTangent&lt; _Scalar, _N &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_rn_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>Eigen::Map&lt; manif::SE3Tangent&lt; _Scalar &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01manif_1_1_s_e3_tangent_3_01___scalar_01_4_00_010_01_4"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>manif::SE3Tangent&lt; _Scalar &gt;</label>
        <link refid="structmanif_1_1_s_e3_tangent"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>manif::SE2Tangent&lt; _Scalar &gt;</label>
        <link refid="structmanif_1_1_s_e2_tangent"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>manif::SE3TangentBase&lt; Map&lt; manif::SE3Tangent&lt; _Scalar &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_s_e3_tangent_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>manif::TangentBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_tangent_base"/>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" line="22" column="1" bodyfile="/home/runner/work/manif/manif/include/manif/impl/tangent_base.h" bodystart="23" bodyend="353"/>
    <listofallmembers>
      <member refid="structmanif_1_1_tangent_base_1a9c4d27fc308816b507af1734a42c01c1" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>cast</name></member>
      <member refid="structmanif_1_1_tangent_base_1aaef816e134cd084829636a27a71b7aae" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>cast</name></member>
      <member refid="structmanif_1_1_tangent_base_1a573f842dc25ee3125f8959ccdacb5240" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>coeffs</name></member>
      <member refid="structmanif_1_1_tangent_base_1a2e28e350e07e2ec1d2a164bd39d3370a" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>coeffs</name></member>
      <member refid="structmanif_1_1_tangent_base_1a6004be883d35b1e2a1ac04efd63c7443" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>data</name></member>
      <member refid="structmanif_1_1_tangent_base_1a56bf87afd42cd3c795d1a2878ca99010" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>data</name></member>
      <member refid="structmanif_1_1_tangent_base_1adf320fca86420a44f1e80cf003800dfb" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>DataType</name></member>
      <member refid="structmanif_1_1_tangent_base_1a18e1a216f401f804a09047242bf987a7" prot="protected" virt="non-virtual"><scope>manif::TangentBase</scope><name>derived</name></member>
      <member refid="structmanif_1_1_tangent_base_1aa2305ee8102e265616aa35416179b377" prot="protected" virt="non-virtual"><scope>manif::TangentBase</scope><name>derived</name></member>
      <member refid="structmanif_1_1_tangent_base_1a6c72f3d4af207ef853df0387a31a8334" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>Dim</name></member>
      <member refid="structmanif_1_1_tangent_base_1a10a74cacca2371dfe8260727bd9bdf37" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>DoF</name></member>
      <member refid="structmanif_1_1_tangent_base_1a9720e984db5900bce796bf47cda977ee" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>exp</name></member>
      <member refid="structmanif_1_1_tangent_base_1acce070bec9a040c8a3195168756f9b99" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>Generator</name></member>
      <member refid="structmanif_1_1_tangent_base_1a2dbd4f126e05b21b0adee045844579a4" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>generator</name></member>
      <member refid="structmanif_1_1_tangent_base_1a8e9722a81dfde9006f26c1ff0d2a65fa" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>hat</name></member>
      <member refid="structmanif_1_1_tangent_base_1a83d40f212a18ed4c9b28e56ca4f5704c" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>inner</name></member>
      <member refid="structmanif_1_1_tangent_base_1a0a29f4a104f11fd83823fcafa1e6b2c9" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>InnerWeights</name></member>
      <member refid="structmanif_1_1_tangent_base_1a7f05a48c9ffd4d5f582f0062c8bf9f55" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>innerWeights</name></member>
      <member refid="structmanif_1_1_tangent_base_1a151e1d9be260ac7bab172b950017a57c" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>InnerWeightsMatrix</name></member>
      <member refid="structmanif_1_1_tangent_base_1a09d1ca10487c6c7cc43ff456a1664b65" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>isApprox</name></member>
      <member refid="structmanif_1_1_tangent_base_1a11263b30dc75dbdf769c86a26001c320" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>isApprox</name></member>
      <member refid="structmanif_1_1_tangent_base_1ab8e7408713b9750c12418ae9ba9dbd90" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>Jacobian</name></member>
      <member refid="structmanif_1_1_tangent_base_1a8baef49ae68f130cda30e49f6f402999" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>LieAlg</name></member>
      <member refid="structmanif_1_1_tangent_base_1a2662a9b7a2dc0d5b1d34e1517e258300" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>LieGroup</name></member>
      <member refid="structmanif_1_1_tangent_base_1a7a2388b41455b45aee88a3be3fa76f0e" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>ljac</name></member>
      <member refid="structmanif_1_1_tangent_base_1a78c6848ad03d27864eb9633da29b27e1" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>ljacinv</name></member>
      <member refid="structmanif_1_1_tangent_base_1a2a7e0e996eef0cb4bd537d172f04cdb2" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>ljacinv</name></member>
      <member refid="structmanif_1_1_tangent_base_1a375b870e90fabfce45b5a74c46c54b62" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>lplus</name></member>
      <member refid="structmanif_1_1_tangent_base_1acc8d41b513681114f8091f53d81626a1" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>minus</name></member>
      <member refid="structmanif_1_1_tangent_base_1aeec01529723a9090073be80e6e3983a2" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>operator*=</name></member>
      <member refid="structmanif_1_1_tangent_base_1afc150adf396c8432ce0ba909571bd70c" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>operator+</name></member>
      <member refid="structmanif_1_1_tangent_base_1a6be164dc3b9118f3bfebd7f59b4a7a38" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>operator+=</name></member>
      <member refid="structmanif_1_1_tangent_base_1a1271777d229f54a5dd0f0f12d45f043f" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>operator+=</name></member>
      <member refid="structmanif_1_1_tangent_base_1a35e627252748a0268c6ee908d2d09b12" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>operator-</name></member>
      <member refid="structmanif_1_1_tangent_base_1afc51a6333c409460fc017b2303cd2484" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>operator-=</name></member>
      <member refid="structmanif_1_1_tangent_base_1a3fa85584b927625ddeb8f482008623c6" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>operator-=</name></member>
      <member refid="structmanif_1_1_tangent_base_1ab59f8be2812f60af208fcbb2e3683699" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>operator/=</name></member>
      <member refid="structmanif_1_1_tangent_base_1a4d991baead4165a238e5a76fd7c57db8" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>operator&lt;&lt;</name></member>
      <member refid="structmanif_1_1_tangent_base_1a414b302f5e268f819a0e992f18dd682d" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_tangent_base_1a2703d13faf7a912f8078129b2a4e66c6" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_tangent_base_1ab8fc7edb0d20e2ecda82fd6d536cb425" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_tangent_base_1a833073611c3ee66cfd57bfb3910f98a9" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>operator[]</name></member>
      <member refid="structmanif_1_1_tangent_base_1acd41e485fbedddc6f5e958cc5c61fa45" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>operator[]</name></member>
      <member refid="structmanif_1_1_tangent_base_1ab26fdad01bd80b6c628465f4b82a0411" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>OptJacobianRef</name></member>
      <member refid="structmanif_1_1_tangent_base_1a08bbcf10f4f7ed8210566e3a12556c8a" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>plus</name></member>
      <member refid="structmanif_1_1_tangent_base_1a606e1b9c212b8320f65378437d302c0b" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>plus</name></member>
      <member refid="structmanif_1_1_tangent_base_1abdc6586b6f1bc615dc252df10a0e4f2a" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>Random</name></member>
      <member refid="structmanif_1_1_tangent_base_1abc26abf20f27e8ba2353557c565c04fd" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>RepSize</name></member>
      <member refid="structmanif_1_1_tangent_base_1a16ec60694f825f03727e09f257d6da1f" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>retract</name></member>
      <member refid="structmanif_1_1_tangent_base_1a11c72414544c6161c77ff3683b58d94c" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>rjac</name></member>
      <member refid="structmanif_1_1_tangent_base_1ad06291edca01f9a97aaf338b414d2897" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>rjacinv</name></member>
      <member refid="structmanif_1_1_tangent_base_1a87ed7fdbe3f5cf3a8f9e27f58f4e8743" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>rjacinv</name></member>
      <member refid="structmanif_1_1_tangent_base_1a4533ec7b13c30b5ec8fb1d5c84039502" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>rplus</name></member>
      <member refid="structmanif_1_1_tangent_base_1a5e950e12d3b90e86b9e8d1c88ae44d3c" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>Scalar</name></member>
      <member refid="structmanif_1_1_tangent_base_1af7bd211079a17ccc135877c1d96aaeed" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>setRandom</name></member>
      <member refid="structmanif_1_1_tangent_base_1a04926ad935d5d3504cb69123128b5022" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>setZero</name></member>
      <member refid="structmanif_1_1_tangent_base_1a41858edd33970d567b149324f2972cae" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>size</name></member>
      <member refid="structmanif_1_1_tangent_base_1acd95afc304c76ec8df6d8e8da676d90c" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>smallAdj</name></member>
      <member refid="structmanif_1_1_tangent_base_1a7439ba89e703a34202391e2a6a9aeda1" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>squaredWeightedNorm</name></member>
      <member refid="structmanif_1_1_tangent_base_1a28e3e53e1c1c91f29a8417e7e3a3a654" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>Tangent</name></member>
      <member refid="structmanif_1_1_tangent_base_1a0c8b928c0e5710577fe171046920411c" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>TangentTemplate</name></member>
      <member refid="structmanif_1_1_tangent_base_1aebc062717b43ce0d4f623191b3a4e626" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>weightedNorm</name></member>
      <member refid="structmanif_1_1_tangent_base_1a69d9ad80a547f43f038ee3f60df21ba8" prot="public" virt="non-virtual"><scope>manif::TangentBase</scope><name>Zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
